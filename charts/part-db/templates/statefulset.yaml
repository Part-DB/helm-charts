apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "app.fullname" . }}
  labels: {{- include "app.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "app.matchLabels" . | nindent 6 }}
  replicas: 1
  serviceName: {{ template "app.fullname" . }}
  template:
    metadata:
      labels: {{- include "app.labels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 4 }}
      {{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
      - name: migrate-db
        {{- with .Values.image }}
        image: "{{ .registry }}/{{ .repository }}:{{ .tag }}"
        imagePullPolicy: {{ .pullPolicy | quote }}
        {{- end }}
        securityContext:
          runAsUser: 33 # www-data
        command: [php, bin/console, doctrine:migrations:migrate]
        envFrom:
        - secretRef:
            name: {{ template "app.fullname" . }}-config
        {{- if .Values.extraVars }}
        env:
          {{- toYaml .Values.extraVars | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: pub
          mountPath: /var/www/html/var/db
          subPath: db
      containers:
      - name: part-db
        {{- with .Values.image }}
        image: "{{ .registry }}/{{ .repository }}:{{ .tag }}"
        imagePullPolicy: {{ .pullPolicy | quote }}
        {{- end }}
        envFrom:
        - secretRef:
            name: {{ template "app.fullname" . }}-config
        {{- if .Values.extraVars }}
        env:
          {{- toYaml .Values.extraVars | nindent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: http
          timeoutSeconds: 5
        volumeMounts:
        - name: pub
          mountPath: /var/www/html/var/db
          subPath: db
        - name: pub
          mountPath: /var/www/html/uploads
          subPath: uploads
        - name: pub
          mountPath: /var/www/html/public/media
          subPath: public_media
      volumes:
      {{- if .Values.persistence.enabled }}
        - name: pub
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default ( include "app.fullname" . ) }}
      {{- else }}
        - name: pub
          emptyDir: {}
      {{- end }}